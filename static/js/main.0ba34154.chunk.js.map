{"version":3,"sources":["assets/image/savingmoney.jpg","components/Summarize.js","constants/constants.js","components/MoneyAction.js","components/MoneyList.js","components/TestRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","date","Date","monthNames","Summarize","list","sum","reduce","item","status","value","incomeTotal","expensesTotal","className","getMonth","getDate","statuses","MoneyAction","handleAddItem","useState","description","setItem","handleUpdateItem","event","field","target","newItem","handleClassName","console","log","document","getElementById","options","selectedIndex","action","onSubmit","preventDefault","handleSaveItem","id","onChange","required","type","placeholder","MoneyList","handleDelete","incomeList","filter","expensesList","map","key","onClick","aria-hidden","TestRouter","App","setList","useEffect","localStorage","getItem","JSON","parse","stringify","udatedItem","now","deletedList","to","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ba34154.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/savingmoney.2485eb81.jpg\";","import React,{} from 'react'\r\nlet date = new Date();\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nfunction Summarize({ list }) {\r\n    let sum = list.reduce((sum, item) => item.status === true || item.status === \"true\" ? sum + item.value : sum - item.value, 0);\r\n    let incomeTotal = list.reduce((incomeTotal,item) => item.status ? incomeTotal + item.value : incomeTotal,0);\r\n    let expensesTotal = list.reduce((expensesTotal,item) => item.status==='false' ? expensesTotal - item.value : expensesTotal,0);\r\n    return (\r\n        <div className=\"summary\">\r\n            <p className=\"summary__date\">Available Budget in : {`${monthNames[date.getMonth()]} ${date.getDate()}`}</p>\r\n            <h1 className=\"summary__money\" className={sum >= 0 ? \"summary__sum income-lger\" : \"summary__sum expense-lger\"}>{sum}</h1>\r\n            {/* <p className=\"summary__income\">{incomeTotal}</p> */}\r\n            {/* <p className=\"summary__expenses\">{expensesTotal} : {expensesTotal/incomeTotal ? `${Math.trunc(expensesTotal*100/incomeTotal)}%` : '---'}{incomeTotal}{expensesTotal}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summarize\r\n","export const statuses = {\r\n    INCOME: \"true\",\r\n    EXPENSE: \"false\"\r\n}","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { statuses } from '../constants/constants';\r\nimport sumBg from '../assets/image/savingmoney.jpg';\r\n// const newItem = {\r\n//     description : \"\",\r\n//     value:\"\",\r\n//     status:true,\r\n// }\r\n\r\n\r\nfunction MoneyAction({handleAddItem}) {\r\n    // const [value, setValue] = useState([]);\r\n    const [item, setItem] = useState({\r\n        description : \"\",\r\n        value: \"\",\r\n        status: statuses.INCOME,\r\n    });\r\n    const handleUpdateItem = (event, field) => {\r\n        const { value } = event.target;\r\n        const newItem = { ...item };\r\n        newItem[field] = value;\r\n        handleClassName()\r\n        setItem(newItem);\r\n        console.log(item.status)\r\n        // return(item.status)\r\n    }\r\n    const handleSaveItem = (event) => {\r\n        event.preventDefault();\r\n        // console.log(item)\r\n        handleAddItem(item)\r\n        setItem({\r\n            description : \"\",\r\n            value: \"\",\r\n            status: statuses.INCOME,\r\n        })\r\n    };\r\n    const handleClassName = ()=>{\r\n        return document.getElementById('money-status').options[document.getElementById('money-status').selectedIndex].value;\r\n    }\r\n\r\n    // \"\" 123456\r\n    // 246\r\n    return (\r\n        <div className=\"money-action\">\r\n            <form action=\"submit\" onSubmit={(event) => handleSaveItem(event)}>\r\n                <select id=\"money-status\"\r\n                    value={item.status}\r\n                    onChange= {event => handleUpdateItem(event, 'status')} \r\n                    className={item.status==='true'||item.status=== true ? 'money__input' : 'money__input money--expense'}>\r\n                    <option value={statuses.INCOME}  className=\"money__input\">+</option>\r\n                    <option value={statuses.EXPENSE}  className=\"money__input\">-</option>\r\n                </select>\r\n                <input \r\n                    required\r\n                    type=\"text\" \r\n                    className={item.status==='true'||item.status=== true ? \"money__input money__description\" : \"money__input money__description money--expense\" } \r\n                    onChange={event => handleUpdateItem(event, 'description')} \r\n                    value={item.description}\r\n                    placeholder=\"Add your description here\"\r\n                />\r\n                <input\r\n                    type=\"number\" \r\n                    className={item.status==='true'||item.status=== true ? 'money__input money__amount' : 'money__input money__amount money--expense'}\r\n                    onChange={event => handleUpdateItem(event, 'value')} \r\n                    value={item.value}\r\n                    placeholder=\"$ Amount of money $\"   \r\n                />\r\n                <button className={item.status==='true'||item.status=== true ? 'money__input money-submit' : 'money__input money-submit money--expense'} type=\"submit\">ADD</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nMoneyAction.propTypes = {\r\n    handleAddItem: PropTypes.func\r\n};\r\n\r\nexport default MoneyAction\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\n\r\nfunction MoneyList({ list, handleDelete }) {\r\n    // useEffect(()=>{\r\n    //     const negativeList = list.filter( item => item.status == false);\r\n    //     console.log(negativeList)\r\n    //     return negativeList\r\n    // },[list])\r\n    const incomeList = list.filter(item => item.status === true || item.status === \"true\");\r\n    const expensesList = list.filter(item => item.status === false || item.status === \"false\");\r\n\r\n    return (\r\n        <div className=\"monney__list\">\r\n            <div className=\"monney__list__col monney__list--income\"><h4 className=\"monney__list__heading\">INCOME</h4>\r\n            {\r\n                    incomeList.map(item => (\r\n                        <div key={item.id} className=\"income__item list-item\">\r\n                            <p key={item.id}>{item.description}:    {item.value}</p>\r\n                            <button onClick={() => handleDelete(item.id)}><i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div className=\"monney__list__col monney__list--expenses\"><h4 className=\"monney__list__heading\">EXPENSE</h4>\r\n            {\r\n                    expensesList.map(item => (\r\n                        <div key={item.id} className=\"expenses__items list-item\">\r\n                            <p key={item.id}>{item.description}:    {item.value}</p>\r\n                            <button onClick={() => handleDelete(item.id)}><i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoneyList\r\n","import React from \"react\";\r\n\r\nexport default function TestRouter() {\r\n  return <div>Test Router</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./assets/style/main.scss\";\n\nimport Summarize from \"./components/Summarize\";\nimport MoneyAction from \"./components/MoneyAction\";\nimport MoneyList from \"./components/MoneyList\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport TestRouter from \"./components/TestRouter\";\n\nfunction newItem(item) {\n  const id = Date.now();\n  return {\n    id,\n    description: item.description,\n    status: item.status,\n    value: +item.value,\n  };\n}\nfunction App() {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    let list = localStorage.getItem(\"list\");\n    if (list) {\n      setList(JSON.parse(list));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(list));\n    // localStorage.setItem(\"list\",'');\n  }, [list]);\n  const handleAddItem = (item) => {\n    let udatedItem = newItem(item);\n    setList([...list, udatedItem]);\n  };\n  const handleDelete = (id) => {\n    const deletedList = list.filter((value) => value.id !== id);\n    setList(deletedList);\n  };\n\n  return (\n    <div className=\"App container\">\n      <Summarize list={list} />\n      <MoneyAction handleAddItem={handleAddItem} />\n      <MoneyList list={list} handleDelete={handleDelete} />\n      <Link to=\"/abc\">GO to abc</Link>\n      <Link to=\"/\">GO to home</Link>\n      <Switch>\n        <Route path=\"/abc\" exact component={TestRouter} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n// react router dom -> BrowserRouter (history, .... -> router) -> /abc\n// HashRouter -> /#/abc\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport { HashRouter, BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}